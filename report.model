//====================================================================/
//　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　/
// artisoc                                                            /
//                                                                    /
//====================================================================/

Version = 4.2;



//-------------------------------------------------------
// Component Tree
//-------------------------------------------------------
UNIVERSE {
    Space escalator(0,0),Square_2D(120, 30, !Loop, North, 1, !Map_3D){
        AgtType person(0, 0)[0] {
            Dim ID(0, 0) As Integer = (0);
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
            Dim condition(0, 0) As Integer = (0);
            Dim speed(0, 0) As Double = (0.0);
            Dim distance(0, 0) As Double = (0.0);
            Dim is_last(0, 0) As Boolean = (0);
            Dim start_step(0, 0) As Integer = (0);
        }
        AgtType moving_person(0, 0)[0] {
            Dim ID(0, 0) As Integer = (0);
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
            Dim condition(0, 0) As Integer = (0);
            Dim speed(0, 0) As Integer = (0);
            Dim distance(0, 0) As Integer = (0);
            Dim is_last(0, 0) As Boolean = (0);
            Dim start_step(0, 0) As Integer = (0);
        }
    }
    Dim appear_rate(0, 0) As Double = (0.0);
    Dim esc_speed(0, 0) As Double = (0.0);
    Dim n_waiting(0, 0) As Integer = (0);
    Dim sum_time_for_static(0, 0) As Integer = (0);
    Dim sum_time_for_moving(0, 0) As Integer = (0);
}


//-------------------------------------------------------
// Agent Variable Initial Data
//-------------------------------------------------------
Initial_Value {
    UNIVERSE.APPEAR_RATE = 1(0.30000000000000004);
}


//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE
Univ_Init{
	Universe.sum_time_for_static = 0
	Universe.sum_time_for_moving = 0
}

//function func(arg) as Integer {
//}

Univ_Step_Begin{
	Dim waiting_limit As integer
	Dim hurry_degree As Double
	waiting_limit = 7
	hurry_degree = Rnd()

	Dim person As Agt
	Dim n_person As Integer
	Dim moving_person As Agt
	Dim n_moving_person As Integer
	
	if GetCountStep() <= 80 and GetCountStep() Mod 2 == 0 Then
		If Universe.n_waiting < waiting_limit and hurry_degree > Universe.appear_rate Then
			Println(Universe.n_waiting)
			person = CreateAgt(Universe.escalator.person)
			person.speed = 2
			person.is_last= true
			person.start_step = GetCountStep()
		Else
			moving_person = CreateAgt(Universe.escalator.moving_person)
			moving_person.speed = 2
			moving_person.is_last = true
			moving_person.start_step = GetCountStep()
		End if
	End if 
//	Universe.escalator.person(n_person-1).is_last = false
//	Universe.escalator.moving_person(n_moving_person-1).is_last = false

	
	Dim j As Integer // iterator
	Universe.n_waiting = 0
	n_person = CountAgt(Universe.escalator.person)
	// Measure distance with front person
	For j = 0 To n_person-2
		if Universe.escalator.person(j).X < 30 Then
			Universe.n_waiting = Universe.n_waiting + 1
		End if
		Universe.escalator.person(j+1).distance = Universe.escalator.person(j).X - Universe.escalator.person(j+1).X
	Next j
	
	n_moving_person = CountAgt(Universe.escalator.moving_person)
	For j = 0 To n_moving_person-2
		Universe.escalator.moving_person(j+1).distance = Universe.escalator.moving_person(j).X - Universe.escalator.moving_person(j+1).X
	Next j
}

Univ_Step_End{
	If GetCountStep() >= 200 Then
		ExitSimulationMsgLn("static:" & Universe.sum_time_for_static & "moving:" & Universe.sum_time_for_moving)
	End if
}

Univ_Finish{

}
#end_rule UNIVERSE




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.ESCALATOR.PERSON
Agt_Init{
My.Y = 16
My.Direction = 0
}

Agt_Step{
Dim front as Agt

//前のAgtを見定める
If My.ID != 0 Then
	front = Universe.escalator.person(My.ID - 1)
End if


Dim end_border As Integer
end_border = 100
If My.X > end_border Then
	Universe.sum_time_for_static =
		Universe.sum_time_for_static + GetCountStep() - My.start_step
	DelAgt(My)
	return
End if

Dim border As Integer
border = 30

If My.X > border Then //X>30で、距離を2に保ちながら1ずつ移動する
	Forward(1)
	My.condition = Color_Black
Elseif My.X > border - 2 Then // 28<X<=30で、間隔2以上なら速度1で前進、2未満なら停止
	If My.ID == 0 Then
		Forward(1)
	Else
		If My.distance >= 2 Then
			Forward(1)
			My.condition = Color_Blue
		Else
			Forward(0)
			My.condition = Color_Red
		End if
	End if
Else //X<28で、間隔1以上なら速度2で前進、1未満なら停止
	If My.ID == 0 Then
		Forward(My.speed)
	Else
		If My.distance >= My.speed + 1 Then //速度をランダムにしたときに対応してあります
			Forward(My.speed)
			My.condition = Color_Black
		Elseif My.distance > 1 Then
			My.X = front.X - 2
			My.condition = Color_Blue //間隔2を保つ
		Else
			My.X = front.X - 1
			My.condition = Color_Mazenta //間隔1を保つ
		End if
	End if
End if
}
#end_rule UNIVERSE.ESCALATOR.PERSON




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.ESCALATOR.MOVING_PERSON
Agt_Init{
My.Y = 8
My.Direction = 0
}

Agt_Step{
Dim front as Agt

If My.ID != 0 Then
	front = Universe.escalator.moving_person(My.ID - 1)
End if 


Dim end_border As Integer
end_border = 100
If My.X > end_border Then
	Universe.sum_time_for_moving =
		Universe.sum_time_for_moving + GetCountStep() - My.start_step
	DelAgt(My)
	return
End if

Dim border As Integer
border = 30

// case X > border
If My.X > border Then 
	Forward(Universe.esc_speed + 0.5)
	My.condition = Color_Black
	return
End if


// case 28<X<=30, 間隔>=2なら1前進、<2なら停止
if My.X >border - 2 Then 
	If My.ID == 0 Then
		Forward(1)
		return
	End if
	If My.distance >= 2 Then
		Forward(1)
		My.condition = Color_Blue
	Else
		My.condition = Color_Red
	End if
Else // case X < 28, 間隔>=1なら2前進、<1なら停止
	If My.ID == 0 Then
		Forward(My.speed)
		return
	End if
	
	If My.distance >= My.speed + 1 Then //速度をランダムにしたときに対応してあります
		Forward(My.speed)
		My.condition = Color_Black
	Elseif My.distance > 1 Then
		My.X = front.X - 2
		My.condition = Color_Blue
	Else
		My.X = front.X - 1
		My.condition = Color_Mazenta
	End if
End if
}
#end_rule UNIVERSE.ESCALATOR.MOVING_PERSON




//-------------------------------------------------------
// Simulation Definition Division
//-------------------------------------------------------
Single_Simulation {
    Step_Max = 0;
    Time_Max = 0;
    End_Condition = "";
    Exec_Wait = 100;
    Exec_Wait_Max = 1000;
    Random_Generator = Java_Standard;
    Exec_Order = Random;
    Exec_Order_Random_First_Step_Only = No;
    Random_Seed = 0;
    Redraw_Timing = Step;
    Redraw_Interval = 1;
    Garbage_Interval = 0;
}


//-------------------------------------------------------
// Simulation Loop Definition Division
//-------------------------------------------------------
Repeat_Simulation {
    Value_Change = None;
    Initial_Value_Change_None {
        Repeat_Max = 1;
    }
}


//-------------------------------------------------------
// 2 Dimension Map Display Definition Division
//-------------------------------------------------------
Map_Output {
    Map_Space_Name = "Universe.escalator";
    Map_Name = "esc";
    Title = "esc";
    Disable = No;
    Background_Color = 255, 255, 255;
    Position_x = 252;
    Position_y = 3;
    Size_x = 549;
    Size_y = 318;
    Map_Cell_Size = 3;
    Remarks = Yes;
    Legend_Pos = Top;
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    FastDraw = Yes;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Axis_Label = "", "";
    Draw_Range = 0, 0, 120, 30;
    Ruled_Line = No;
    Text_Display = No;
    Text_Display_Variable_Name = "";
    Chess_Type_Display_Position = No;
    Background_Transparent = No;
    Target_Layer = 0;
    Coordinate_Display = No;
    Space_Kind = Square_2D;
    BG_Pict = No;
    BG_Type = 0;
    BG_Var_Name = "";
    BG_File_Name = "";
    Origin_Position = 2;
    Output_Group_Name = "";
    Output {
        Map_Element_Name = "person";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.escalator.person";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = "Universe.escalator.person.condition";
        Marker_Id = 1;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.escalator.person.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.escalator.person.ID";
    }
    Output {
        Map_Element_Name = "moving_person";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.escalator.moving_person";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = 255,0,0;
        Marker_Id = 1;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.escalator.moving_person.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.escalator.moving_person.ID";
    }
}


//-------------------------------------------------------
// Control Panel Definition Division
//-------------------------------------------------------
Control_Panel {
    Display_Area = 1281, 62, 159, 224;
    Display_Type = 0;
    Panel_Item {
        Item_Type = Slider;
        Item_Name = "APPEAR RATE";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.appear_rate";
        Slider_Range_Max = 10;
        Slider_Value_Min = 0.0;
        Slider_Value_Step = 0.1;
        Slider_Value = "3";
    }
    Panel_Item {
        Item_Type = Slider;
        Item_Name = "escalator speed";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.esc_speed";
        Slider_Range_Max = 9;
        Slider_Value_Min = 1.0;
        Slider_Value_Step = 1.0;
        Slider_Value = "0";
    }
}


//-------------------------------------------------------
// Space Initial Value Definition Divsion
//-------------------------------------------------------
Space_Initial {
}


//-------------------------------------------------------
// Other Miscellaneous Data Definition Division
//-------------------------------------------------------
Others_Data {
    Indent = 4;
    Rule_Colored = Yes;
    Rule_LineNo = Yes;
    Window_Hide_Run = 1;
    Debug_Position_x = 75;
    Debug_Position_y = 75;
    Debug_Size_x = 400;
    Debug_Size_y = 200;
    Console_Position_x = 2;
    Console_Position_y = 400;
    Console_Size_x = 600;
    Console_Size_y = 120;
    Componen_Tree_Position_x = 3;
    Componen_Tree_Position_y = 2;
    Componen_Tree_Size_x = 249;
    Componen_Tree_Size_y = 400;
    Console_Background_Color = 16777215;
    Console_Foreground_Color = 255;
    Console_DisplayLines_Max = 500;
    plug_in_module_name = "";
    Font_Name = "Dialog";
    Font_Char_Set = 0;
    Font_Size = 14.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 0, 0, 0;
}


//-------------------------------------------------------
// Network Information Definition Division
//-------------------------------------------------------
Network_Info {
    Global_Space_Area = 0, 0, 100, 100;
    Local_Space_Info {
    }
}


//-------------------------------------------------------
// Window Location Definition Division
//-------------------------------------------------------
Window_Rectangle {
    Window_Name = Main_Window, 0, 23, 1440, 700;
    Window_Name = Output_Setting_Window, 495, 175, 480, 350;
    Window_Name = Artisoc_Help_Window, 10, 10, 400, 300;
}


//-------------------------------------------------------
// Help Favorite Division
//-------------------------------------------------------
Help_Favorite {
}


//-------------------------------------------------------
// Model Description Division
//-------------------------------------------------------
Model_Description {
    Universe {
        Function Univ_Init {
        }
        Function Univ_Step_Begin {
        }
        Function Univ_Step_End {
        }
        Function Univ_Finish {
        }
    }
    Space Universe.escalator {
    }
    Agent Universe.escalator.person {
        Function Agt_Init {
        }
        Function Agt_Step {
        }
    }
    Agent Universe.escalator.moving_person {
        Function Agt_Init {
        }
        Function Agt_Step {
        }
    }
}
